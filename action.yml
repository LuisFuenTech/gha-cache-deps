name: "Cache/Install NodeJS Dependencies"
description: "Cache dependencies or install them"
author: "LuisFuentech"
branding:
  icon: "save"
  color: "blue"
inputs:
  caching:
    description: "Whether to cache dependencies or not"
    required: false
    default: "true"
  node-manager:
    description: "The node manager to use (npm or yarn)"
    required: false
    default: "npm"
  lock-file:
    description: "The lock file to use"
    required: false
    default: "package-lock.json"
outputs:
  used-cache:
    description: "Whether the cache was used or not."
    value: ${{ steps.install.outputs.cache }}
runs:
  using: "composite"
  steps:
    - name: Cache dependencies
      if: ${{ inputs.caching == 'true' }}
      id: cache
      uses: actions/cache@v4
      with:
        path: node_modules
        key: deps-node-modules-${{ hashFiles('**/${{ inputs.lock-file }}') }}
    - name: Install dependencies
      id: install
      if: ${{ steps.cache.outputs.cache-hit != 'true' || inputs.caching != 'true' }}
      run: |
        chmod +x $INSTALL_SH
        $INSTALL_SH ${{ inputs.node-manager }}
        echo "cache='${{ inputs.caching }}'" >> $GITHUB_OUTPUT
      shell: bash
      env:
        INSTALL_SH: ${{ github.action_path }}/install.sh
    - name: Print Output
      run: echo "${{ steps.install.outputs.cache && 'Cache was not used' || 'Cache was used' }}"
      shell: bash
